
 @import "defaults";

/* - - - local partials assembly - - - - - - - - - - - - - - - - - - - -
 * FILE: _mediaqueries.scss
 */

@for $i from 0 through 30 {
  @media (min-width: 19.375em + ($i * 1.875em)) {
    body {
      margin-top: (3.141em + ($i * 0.114em)) + 0.4em; //0.4em is the top border height //0.114 was calculated as the mean height increase as the text size increases. //3.141em was calculated as the starting point at a width of 19.375em
    }
    .contain {
      border-top: (3.141em + ($i * 0.114em)) solid transparent; //offset mixin
      margin-top: -(3.141em + ($i * 0.114em)); //offset mixin
    }
    section {
      border-top: (3.141em + ($i * 0.114em)) solid transparent; //offset mixin
      margin-top: -(3.141em + ($i * 0.114em)); //offset mixin
    }
    nav {
      width: 19.375em + ($i / 1 ) + 1.6em; //+1.5em because "CONTACT" is too wide... pushes nav slightly off screen though.
      //width: 21em + ($i / 1 );
      li {
      width: ((19.375em + ($i / 1) + 1.6em) / 4); //4 is how many nav items //+1.5em because "CONTACT" is too wide... pushes nav slightly off screen though.
      //width: ((21em + ($i / 1)) / 4);
      }
    }
    header h1 {
      font-size: 1.4em + ($i / 10);
    //  @include transition(font-size 0.2s linear);
    }
    #about img {
      margin-top: .5em + ($i / 10);
      width: 8em + ($i / 6);
    // @include transition(width 0.2s linear, margin-top 0.2s linear);
    }
  }
}

@media (min-width: 19em) and (max-width: 25em) {
  nav {
  margin-left: -(1.6em / (4 * 2)); //trying to compensate for making the width 1.5em too large per item which is noticible on smaller screens
  }
}


//OVERRIDES:
nav {
  max-width: 6.5em * 4; //4 is how many nav items //6.5em is just a good looking width to cap it at. overrides media query
  li {
    max-width: 6.5em; //6.5em is just a good looking width to cap it at
  }
}