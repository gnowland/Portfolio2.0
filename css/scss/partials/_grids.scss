// GRIDS BY SUSY http://susy.oddbird.net/
// TUT: http://code.tutsplus.com/tutorials/responsive-grids-with-susy--net-27893

@import
  "defaults";

/* - - - local partials assembly - - - - - - - - - - - - - - - - - - - -
 * FILE: _grids.scss
 */

 /* Setting up the Magic Grid */
 //

 $susy: (
   columns: 12,
   gutters: 1/4,
   math: fluid,
   output: float,
   gutter-position: after,
   column-width: 4em,
 );

body {
  //@include container;
}

.wrapper{
  @include container;
  height: inherit;
  position: relative;
}

header {
  z-index: 5;
  @include container(100%);
  @include full;
  h1 {
    @include span(8);
  }
}

nav {
  @include span(last 4 nest) {
    li {
      @include span(isolate 1 of 4 0 no-gutters wide);
    }
  }
}

section {
  @include container(100%);
  @include full;
  border-top: 3em solid transparent;
  margin-top: -2.60em;
}

#about {
  z-index: 4;
  //@include span(12 break);  //these are the same for all sections
  //@include container(100%);
  //@include full;
  .bubble {
    @include span(8 of 12)
  }
  .portrait {
    @include span(last 4 of 12)
  }
}

#work {
  z-index: 3;
}

#contact {
  z-index: 2;
}

footer {
  z-index: 1;
}






/* Setting the Breakpoints */
$breakpoint-to-ems: true;


// assume min-width (by default) if only a number
$breakpoint-medium-width: 500px;
$breakpoint-medium-width-em: 30em;
// set min-width/max-width if both values are numbers
$breakpoint-medium-not-wide: 500px 700px;
// set min/max of feature if there are two numbers
$breakpoint-medium-height: height 300px 700px;
// if one value is a string, assume a feature/value pair
$breakpoint-kind-of-wide: min-width 700px;
$breakpoint-not-too-wide: max-width 700px;
// for multidimensional lists, assume each item is a feature value pair
$breakpoint-wide-portrait: (max-width 700px) (orientation portrait);
// handle one-sided features (ie. monochrome)
$breakpoint-wide-portrait-mono: (max-width 700px) (orientation portrait) (monochrome);
$breakpoint-mono: monochrome;
$breakpoint-hi-rez: min-resolution 1.5dppx;